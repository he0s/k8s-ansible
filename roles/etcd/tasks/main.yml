---
- name: install yum dependency
  when: ansible_os_family == "RedHat"
  yum: name={{ item }} state=latest
  with_items:
    - yum-utils
    - device-mapper-persistent-data
    - lvm2
  tags:
    - yum

# AWS RHEL workaround
- name: install epel-release
  when: ansible_os_family == "RedHat"
  yum:
    name: https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
    state: present
  tags:
    - yum

- name: install epel-release
  when: ansible_os_family == "RedHat"
  yum:
    name: epel-release
    state: present
  tags:
    - yum

- name: create etcd group
  group:
    name: "{{ item.group }}"
    state: present
  with_items:
    - "{{ ETCD_USERS }}"
  tags:
    - etcd_user

- name: create etcd user
  user:
    name: "{{ item.name }}"
    group: "{{ item.group }}"
    home: "{{ item.home_dir }}"
    state: present
  with_items:
    - "{{ ETCD_USERS }}"
  tags:
    - etcd_user

- name: prepare etcd directories
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
  with_items:
    - "{{ ETCD_DIRS }}"
  tags:
    - dirs

- name: get etcd by public url
  when: ansible_os_family == "Debian"
  unarchive:
    src: https://github.com/coreos/etcd/releases/download/{{ETCD_VER}}/etcd-{{ETCD_VER}}-linux-amd64.tar.gz
    dest: /tmp/
    remote_src: yes

- name: copy files
  when: ansible_os_family == "Debian"
  copy:
    src: "/tmp/etcd-{{ETCD_VER}}-linux-amd64/{{ item }}"
    dest: "/usr/bin/{{ item }}"
    remote_src: yes
    mode: 0755
  with_items:
    - etcd
    - etcdctl

- name: install additional packages
  when: ansible_os_family == "RedHat"
  yum:
    name={{ item }} state=latest
  with_items:
    - python-pip
    - etcd
  tags:
    - yum

- name: prepare etcd systemd config
  when: ansible_os_family == "Debian"
  template:
    src: etcd.systemd.debian.j2
    dest: /lib/systemd/system/etcd.service
  tags:
    - etcd
    - config

- set_fact:
    raw_string: "{% for item in ETCD_ADDRESS %}\
      {{item.name}}={{ item.proto }}://{{item.ip }}:{{item.cluster_port}} \
    {% endfor %}"
  tags:
    - config
    - etcd

- set_fact:
    server_list: "{{ raw_string.split() | join(',') }}"
  tags:
    - config
    - etcd

- name: prepare etcd config
  when: ansible_os_family == "RedHat"
  template:
    src: etcd.conf.j2
    dest: /etc/etcd/etcd.conf
    owner: root
    group: root
  tags:
    - config
    - etcd

- name: prepare etcd config
  when: ansible_os_family == "Debian"
  template:
    src: etcd.conf.j2
    dest: /etc/default/etcd
    owner: root
    group: root
  tags:
    - config
    - etcd

- name: open ports for etcd
  firewalld:
    port: "{{ item }}/tcp"
    permanent: true
    state: enabled
    immediate: true
    zone: public
  with_items:
    - 2379
    - 2380
  tags:
    - firewall

- name: start etcd
  systemd:
    name: etcd.service
    enabled: true
    state: started
    daemon_reload: yes
  tags:
    - etcd
